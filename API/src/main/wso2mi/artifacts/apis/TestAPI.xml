<api xmlns="http://ws.apache.org/ns/synapse" name="TestAPI" context="/testapi">
    <resource methods="POST">
        <inSequence>
            <!-- Ensure JSON message format -->
            <property name="messageType" value="application/json" scope="axis2"/>
            <property name="NO_ENTITY_BODY" scope="axis2" action="remove"/>

            <!-- Store incoming JSON array -->
            <property name="originalPayload" scope="default" expression="json-eval($)" type="JSON"/>

            <payloadFactory media-type="json">
                <format>            
                    [{"id":3, "name":"Course 3"}, {"id":4, "name":"Course 4"}]            
                </format>
                <args/>
            </payloadFactory>

            <property name="extraCourses" scope="default" expression="json-eval($)" type="JSON"/>

            <log level="custom">
                <property name="accum" expression="$ctx:extraCourses"/>
                <property name="init" expression="$ctx:originalPayload"/>
            </log>

            <script language="js"><![CDATA[
                var jsArray1 = JSON.parse(mc.getProperty('originalPayload'));
                var jsArray2 = JSON.parse(mc.getProperty('extraCourses'));
                var courses = JSON.stringify(jsArray1.concat(jsArray2));
                mc.setProperty('courses', courses);
            ]]></script>

            <script language="js"><![CDATA[
                var jsArray1 = mc.getProperty('originalPayload');
                var jsArray1_items = jsArray1.replace("[", "").replace("]", "");

                var jsArray2 = mc.getProperty('extraCourses');
                var jsArray2_items = jsArray2.replace("[", "").replace("]", "");
                
                mc.setProperty('jsArray1_items', jsArray1_items);
                mc.setProperty('jsArray2_items', jsArray2_items);
            ]]></script>

           

            <payloadFactory media-type="json" template-type="freemarker">
                <format><![CDATA[
                        {
                            "accum":
                                ${ctx.jsArray1_items},${ctx.jsArray2_items}
                        }]]>
                </format>
                <args/>
            </payloadFactory>
            
            <respond/>
        </inSequence>
    </resource>
</api>
